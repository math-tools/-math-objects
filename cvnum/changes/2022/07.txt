// ---------- //

==
22 ???
==

-------
:break:
-------

[[:api:]] ??????
The packages ``tbox`` and ``convert.integer`` have been totally rebuild. Here are the breaking updates made.

    ?????? 1) The method ``textifyt.IntName.sign_n_abs`` and the module ``var2nb`` have been removed, because a class ``var2int.Var2Int`` has been created to obtain several kinds of normalisation of variables.

    int_n_strify renvoie str et int versions
    int_n_strsignabs


    ?????? 1) Conversions of integers: negative integers are allowed. This has implied the following changes.

        * utilisation de classes avec natconv.NatCnv comme base commune

        * on part de NN puis ensuite on enrichit avec ZZ

        * cahce utilisé en interne pour cas avec base peu changés

        * api "symétrique" : ajout de digits2nat et numerals2nat à Int2Base

        * nom mpons abigus et sytsématique

                        + base dix : pas de péréfixe

                        + [b]digitsof et [b]numeralsof

    ?????? 1) Naming integers: the method ``IntName.nameof`` accepts again variables with string representation beeing a "legal" integer.


--------
:update:
--------

[[:doc:]]
???? toutes les nouveautés !!!

--------
:fordev:
--------

[[:api:]]    ??????
Unit tests.

    ?????? 1) Conversions of integers: every features are tested except for the Roman writing of integers (new versions of Roman conversions will come soon that will be easy to test).


    ?????? 1) Naming integers: new tests added with variables that are not strings.


[[:misc:]]  ??????
https://github.com/gruns/icecream

    ---> faire un mini script BASIQUE qui nettoie code en prod (option dans scr2prod)

            * on vire ligne commençant par ic()
            * on vire import icecream

            * mais aussi on gère
              # ! -- DEBUGGING -- ! #
              suivi de
              # ! -- DEBUGGING -- ! #
              en continue









// ---------- //

==
19
==

--------
:fordev:
--------

[[:facto:]]
Unit tests.

    1) Use of homemade ``hypothesis`` strategies when it is needed.

    1) A package ``unit.common`` contains common tools for tests.


// ---------- //


==
18
==

-------
:break:
-------

[[:api:]]
Here are the breaking new features.

    1) Conversions of integers: one package ``convert.integer`` has been created to gather all the features already available (conversions of other kinds of ¨nbs will be added later).

    1) Naming integers: the method ``IntName.nameof`` only accepts a string.

    1) Toolbox: this package is to share features useful for the packages of  ``cvnum``. This implies the following changes.

        * The package ``tbox.str2nb`` has been deleted.

        * Creation of a new package ``tbox.var2nb`` with the following functions.

            + ``intify`` can transform one variable into a legal integer (for example, this new function allows the use of ¨_s between digits).

            + ``intify_notneg`` can transform one variable into a legal non negtaive integer.

            + ``basify`` can transform one variable into a legal integer that can be used as a base.


---------
:updates:
---------

[[:doc:]]
Here the new things added.

    1) Conversions of integers: the new package ``convert.integer`` has been indicated.

    1) Naming integers: the only possibility to translate from string to string has been added.

    1) Toolbox: a ¨doc has been added to present this package.


[[:bugs:]]
¨DSL for translations: the work on the new unit tests via *googletrad has revealed two stupid bugs with the ¨lang ``en_US``.

    1) The ignored rule cvnum::``*00`` was not redefined in the block cvnum::``small`` such as to obtain the good naming of `100`.

    1) The rule cvnum::``***`` was not indicated to be ignored.


--------
:fordev:
--------

[[:api:]]
New unit tests with some of them that use of the excellent package ``hypothesis``.

    1) Naming integers: two new things.

        * Use of the library ``translators`` to test all integers from `0` to `999` via ¨googletrad (we keep the usecases to verify that ``translators`` does a good job and for tricky names). **The method used is to do some "manual" checkings, and then trust ¨cvnum for some patterns if ¨googletrad is wrong, so some tricky errors could remain inside ¨cvnum.** If needed, some new usecases will be added in the ¨DSL files.

        * The method ``sign_n_abs`` is tested using ``hypothesis``.

    1) Toolbox: the only function tested is ``var2nb.intify`` (that is normal).


// ---------- //


==
17
==

--------
:update:
--------

[[:bugs:]]
¨DSL for translations: the work on some new unit tests have revealed two bad rules.

    1) With the ¨lang ``en_GB``, `14` was translated to "forteen" instead of "fourteen".

    1) With the ¨lang ``es_ES``, `26` was translated to "veintiseis" instead of "veintiséis".


// ---------- //


==
15
==

---------
:updates:
---------

[[:bugs:]]
Three bugs have been fixed.

    1) Class ``textify.integer.IntName``: the underscores was not treated by the method ``sign_n_abs``.

    1) ¨DSL for translations: the usecases tested have revealed some small bugs in the ¨specs of the ¨lang ``it_IT`` and ``de_DE``.


[[:doc:]]
¨DSL for translations: the block cvnum::``patch`` has been clearly indicated to be used for exceptions in naming.


--------
:fordev:
--------

[[:api:]]
Testing the naming of integers.

    1) Some unit tests added by hands.

    1) Datas for unit tests automatically build from the usecases in the folder of the contributions.


// ---------- //


==
13
==

-------
:break:
-------

[[:api:]]
The module ``detextify`` has been renamed ``textify``, and the folder path::``config/detextify`` has become path::``config/textify``.


--------
:update:
--------

[[:bugs:]]
Naming integers: the work on the unit tests has shown the following bugs.

    1) Testing ``fr_FR_tiret`` has shown the need to change the pattern regex::``\S*`` to regex::``[^\s-]*`` (the first one catched the hyphens).
    The fix of this bug has also shown the necessity to build ``self._zerobigname`` differently (see the piece of a rule cvnum::``"[d]- :if: d > 0"``).

    1) Another "stupid" bug fixed: with ``fr_FR``, the integer `5000000000001` was printed "cinq mille milliards zéro million mille un" with an unexpected "zéro million".


[[:api:]]
Contributions.

    1) The folder path::``tools/factory/textify/lang`` has been moved to become path::``contribute/api/textify/lang``.

    1) Creation of the directory path::``contribute/doc`` for the translations of the "human" ¨doc (the ¨lang used for the ¨doc written by the developer is indicated in the file path::``doc/main.txt``)


[[:doc:]]
The following changes have been made.

    1) Folder with the ¨langs supported by the module ``textify``: the new path path::``contribute/api/textify/lang`` has been indicated.

    1) One warning has been added about the new special file path::``FR/FR/usecases/integers/special.txt``.


--------
:fordev:
--------

[[:facto:]]
Semantic coding: ``assert WHAT_IS_WANTED, ERROR_MESSAGE`` is always used instead of something like ``if not WHAT_IS_WANTED: raise Exception(ERROR_MESSAGE)``.


// ---------- //


==
12
==

------
:news:
------

[[:api:]]
¨DSL for translations.

    1) It is now possible to chain extensions of ¨langs (this has allowed to simplify the definition of ``fr_FR_chuquet_1`` by using ``fr_FR_chuquet_2``, this last one being an extension of ``fr_FR``).

    1) The possibility to forbid naming of very big numbers was a missing feature. This has been added (it is used by the ¨langs ``fr_FR_chuquet_1``, ``fr_FR_chuquet_2`` and ``fr_FR_rowlett``).

    1) For the signs, it is possible to indicate a pattern to follow (this has been used to complete the ¨lang ``fr_FR_tiret``).


// ---------- //


==
11
==

--------
:update:
--------

[[:bugs:]]
Naming integers: the work on the unit tests has shown the following bugs that have been fixed.

    1) `400,000` was translated into "four hundred thousand zero" with an unwanted "zero" at the end.

    1) `200_000*10**18` was translated into "two hundred thousand" with the ¨lang ``en_GB``, but "deux cent mille milliards de milliards" with the ¨lang ``fr_FR`` as expected. The bug was also met with the ¨langs ``de_DE``, ``en_US`` and ``it_IT``. That was so violent! :-)


------
:news:
------

[[:api:]]
Here are the changes.

    1) ¨DSL for translations: extended ¨langs can have their own patches.

    1) The file path::``convert.base2dec`` and path::``convert.dec2base`` have been renamed path::``convert.base2int`` and path::``convert.int2base``.


[[:doc:]]
¨DSL for translations.

    1) Some important clarifications have been made about extensions of ¨langs.

    1) Some rules and conventions must be followed to write usecases.


--------
:fordev:
--------

[[:misc:]]
¨Tech ¨doc in the ¨src code: all the prototypes have been updated in the module ``detextify``.


// ---------- //


==
07
==

------
:news:
------

[[:api:]]
Here are the new features to name integers.

    1) Naming integers: the new ¨python ¨api is now "fully functional" (unit tests will be added soon, so it should remain some insidious and serious bugs).

    1) ¨DSL for translations: the analysis of very big numbers follows a simpler logic. This implies the creation of a new optional key cvnum::``dir`` for the block peuf::``general``.


[[:doc:]]
Naming integers: the new way used to analyze very big numbers has been explained (¨docs for the users, and also for the ¨DSL).


--------
:update:
--------

[[:bugs:]]
Naming integers.

    1) The work on the unit tests has shown that `63,005` was translated into "sixty-three thousand and zero hundred and five" with an unwanted "zero hundred". This has been fixed.

    1) The remove of spaces and decimal separators was not implemented. This has been added.


// ---------- //


==
05
==

------
:news:
------

[[:api:]]
Naming integers: the number to name can be any object with a string representation that is a "legal" integer.


[[:doc:]]
Naming integers: the "kinds" of numbers that can be converted have been documented.


[[:api:]]
¨DSL for translations: a block peuf::``this`` must be used to indicated ¨infos about the translation (see the short ¨desc).


// ---------- //


==
04
==

-----
:new:
-----

[[:api:]]
Naming integers.

    1) A new translation: the academic French using the convention "hyphens everywhere" has been added.

    1) Tags for ¨langs have been added to avoid typing errors.


--------
:update:
--------

[[:doc:]]
Naming integers: explanations about the tags for ¨langs have been added (all the ¨langs available are automatically indicated in the ¨doc).


--------
:fordev:
--------

[[:api:]]
¨DSL for translations: a short ¨desc, only in english, must be given for all languages (this is used for the technical and the human ¨docs).


// ---------- //


==
01
==

-------
:break:
-------

[[:api:]]
Naming integers: the conversion from name to integer has been removed because the previous implementation doesn't work with languages like German (this feature should come back later).


--------
:fordev:
--------

[[:api:]]
Configuration file path::``config/detextify/langint.py``: the special constants have different values such as to give specific error messages in case of a bug.
