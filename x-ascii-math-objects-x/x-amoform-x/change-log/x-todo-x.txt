==============
TODO - amoform (Ascii Mathematical Objects - Formulas)
==============


> ---------------------------- <

idée de taper des formules traduites dans un format standard objet récursif pour usage ailleiurs (typuquemet typensee mais pas que car on peut y ajouter la lib perso de création d'objets mathmatiques au hasard : fraction, polynomes, ...etc)

on ne founrit que...
    ---> parsing
    ---> abstraction pythonienne
    ---> sortie ASCII propre


> ---------------------------- <

on utilise un cadre HYPER général

    ---> * est par exemple déf comme ope infixe commutatif

    ---> R , C définies comme ensemble , en fait comme type

    ---> au final on fait du fonctionnel en interne à la OCaml ou Kotlin

    ---> pas d'implicite : pare xemple, on a un type VAR pour le lettres

    ---> voir le tuype hinit de Python

    ---> autoriser l'ajout dynamqiue de nouveaux opératuers !!!!


> ---------------------------- <

sérialisation

    ---> l'idée derrière est d'avoir une firme standard pour par exemple voir que formellement "2a**2+4b" et "2y**2+4x" sont identiques : l'idée est très baisque car on repère la 1er lettre que l'on nomme x_1 puis etc..., on stocke alors la structure avec ce nommage au file de la lecture et ons ticke aussi la table de corrrspondance entre les x_i maison et les variables utilisateurs (ceci autorise d'utiliser x_1 et x_2 en internet pour x_2 et x_1 côté utilisatuer)

    ---> on ne fait aucune manipulation algébrique, boulot que l'on reléguera à des outisl faits pour comme sympy , donc "2a**2+4b" et "4b+2a**2" seront sérieliés différentmment



> ---------------------------- <

on prend tout de meêm en compte quelques manips basique

    ---> normalixation d'écriture de "2a**2+4b" et "4b+2a**2" identiques via la commutativoté de + et *

    ---> normalisation paramtérale (différentes conventions)
